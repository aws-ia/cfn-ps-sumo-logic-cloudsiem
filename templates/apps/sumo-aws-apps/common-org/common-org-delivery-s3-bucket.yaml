AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Creates the Delivery S3 bucket. (qs-1urq0p15p)

Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - W9001 # Resource names should be PascalCase
        - W9003 # Parameter is not in a ParameterGroup
        - W9002 # Parameter is missing ParameterLabe
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Delivery S3 Attributes
        Parameters:
          - DeliveryBucketPrefix
          - DeliveryKMSKeyArn
      -
        Label:
          default: Sumologic Configuration
        Parameters:
          - SumoAWSAccountID
          - SumoDeployment
          - SumoOrganizationId

    ParameterLabels:
      DeliveryBucketPrefix:
        default: Delivery Bucket Prefix
      DeliveryKMSKeyArn:
        default: Delivery KMS Key
      SumoAWSAccountID:
        default: "ID AWS Account of Sumo Logic"
      SumoDeployment:
        default: "Sumo Logic Deployment Name"
      SumoOrganizationId:
        default: "Sumo Logic Organization Id"

Parameters:
  DeliveryBucketPrefix:
    AllowedPattern: "^$|^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription:
      S3 bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Default: log-delivery
    Description: >
      Delivery S3 bucket prefix.
      The account and region will get added to the end. e.g. log-delivery-123456789012-us-east-1
    Type: String

  DeliveryKMSKeyArn:
    AllowedPattern:
      '^arn:(aws[a-zA-Z-]*)?:kms:[a-z0-9-]+:\d{12}:key\/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
    ConstraintDescription:
      'Key ARN example:  arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab'
    Description: KMS Key ARN to use for encrypting data findings sent to S3
    Type: String
  SumoAWSAccountID:
    Description: "The AWS Account ID of Sumo Logic to collect logs from customer"
    Type: String
    AllowedPattern: '^\d{12}$'
    ConstraintDescription: "Log archiving account ID cannot be empty. Must be 12 digits"
    Default: "926226587429"
  ManagementAccountID:
    Description: "The AWS Management AccountID"
    Type: String
    AllowedPattern: '^\d{12}$'
  SumoDeployment:
    Type: String
    AllowedValues:
      - au
      - ca
      - de
      - eu
      - jp
      - us2
      - us1
      - in
      - fed
    Description: "Enter au, ca, de, eu, jp, us2, in, fed or us1."
  SumoOrganizationId:
    Description: "The Account Overview page displays information about your Sumo Logic organization. Used for IAM Role in Sumo Logic AWS Sources."
    Type: String
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Organization Id can not be empty."

  CreateS3Bucket:
    Type: String
    Description: "Yes: Create AWS S3 Bucket for QuickStart logs.
                  No: Skip creation of the S3 Bucket."
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'

  CloudTrailExistsS3BucketName:
    Type: String
    Description: "Required when flag is set to Yes. Provide an existing S3 Bucket name which contains CloudTrail Logs"
    Default: ""

Conditions:
  create_s3_bucket: !Equals [ !Ref CreateS3Bucket, 'Yes']

Resources:

#SNS topic for listen event put object from s3 bucket. After send event to Sumo Logic
  SumoSNSTopic:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W47
            reason: "SNS Topic should specify KmsMasterKeyId property"
    Type: "AWS::SNS::Topic"
    Properties:
      KmsMasterKeyId: !Ref DeliveryKMSKeyArn
      TopicName: !Sub "SumoSNSTopic-${AWS::StackName}"

  SumoSNSpolicy:
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      PolicyDocument:
        Id: SumoTopicPolicy
        Statement:      
          - Sid: "Allow S3 publish message to sns topic"
            Action:
              - sns:Publish
            Condition:
              ArnLike:
                aws:SourceArn:
                  !If
                    - create_s3_bucket
                    - !Sub "arn:aws:s3:::${DeliveryBucketPrefix}"
                    - !Sub "arn:aws:s3:::${CloudTrailExistsS3BucketName}"
            Effect: Allow
            Principal:
              Service: "s3.amazonaws.com"
            Resource:
              - !Ref SumoSNSTopic
          - Sid: "Allow Management Account subcribe"
            Action: "sns:Subscribe"
            Effect: "Allow"
            Principal:
              AWS: !Ref ManagementAccountID
            Resource:
              - !Ref SumoSNSTopic

      Topics:
        - Ref: SumoSNSTopic
  #Role for aws account of sumologic read data in s3 bucket of customer.
  SumoRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${SumoAWSAccountID}:root"
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Sub "${SumoDeployment}:${SumoOrganizationId}"
      Path: "/"
      Policies:
        - PolicyName: SumoPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: "AllowSumologicGetObjectS3"
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:ListBucketVersions
                  - s3:ListBucket
                Resource:
                  !If
                    - create_s3_bucket
                    -
                      - !Sub "arn:aws:s3:::${DeliveryBucketPrefix}/*"
                      - !Sub "arn:aws:s3:::${DeliveryBucketPrefix}"
                    -
                      - !Sub "arn:aws:s3:::${CloudTrailExistsS3BucketName}/*"
                      - !Sub "arn:aws:s3:::${CloudTrailExistsS3BucketName}"
              - Sid: "SumoLogicDescyptS3Object"
                Action:
                  - kms:Decrypt
                Effect: "Allow"
                Resource: !Ref DeliveryKMSKeyArn

  rS3Bucket:
    DependsOn:
      - "SumoSNSpolicy"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Type: AWS::S3::Bucket
    Condition: create_s3_bucket
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W35
            reason: S3 access logging not enabled
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Ref DeliveryKMSKeyArn
              SSEAlgorithm: aws:kms
      BucketName: !Ref DeliveryBucketPrefix
      NotificationConfiguration:
        TopicConfigurations:
          - Event: s3:ObjectCreated:Put
            Topic: !Ref SumoSNSTopic
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      VersioningConfiguration:
        Status: Enabled


  rS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        !If
          - create_s3_bucket
          - !Ref rS3Bucket
          - !Ref CloudTrailExistsS3BucketName
      PolicyDocument:
        Version: 2012-10-17
        Statement:

          - Action: s3:PutObject
            Condition:
              ForAnyValue:StringNotEquals:
                aws:CalledVia:
                  - cloudtrail.amazonaws.com
                  - config.amazonaws.com
                  - firehose.amazonaws.com
                  - fms.amazonaws.com
                  - delivery.logs.amazonaws.com
                  - network-firewall.amazonaws.com
            Effect: Deny
            Principal: "*"
            Resource:
              !If
                - create_s3_bucket
                -
                  - !Sub "arn:aws:s3:::${DeliveryBucketPrefix}/*"
                  - !Sub "arn:aws:s3:::${DeliveryBucketPrefix}"
                -
                  - !Sub "arn:aws:s3:::${CloudTrailExistsS3BucketName}/*"
                  - !Sub "arn:aws:s3:::${CloudTrailExistsS3BucketName}"
            Sid: DenyPutObjectUnlessGuardDutyCloudtrail

          - Action: "s3:*"
            Condition:
              Bool:
                "aws:SecureTransport": "false"
            Effect: Deny
            Principal: "*"
            Resource:
              !If
                - create_s3_bucket
                -
                  - !Sub "arn:aws:s3:::${DeliveryBucketPrefix}/*"
                  - !Sub "arn:aws:s3:::${DeliveryBucketPrefix}"
                -
                  - !Sub "arn:aws:s3:::${CloudTrailExistsS3BucketName}/*"
                  - !Sub "arn:aws:s3:::${CloudTrailExistsS3BucketName}"
            Sid: SecureTransport

          - Action:
              - s3:GetBucketAcl
              - s3:GetBucketLocation
              - s3:ListBucket
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
                - config.amazonaws.com
                - firehose.amazonaws.com
                - fms.amazonaws.com
                - delivery.logs.amazonaws.com
                - network-firewall.amazonaws.com
            Resource:
              !If
                - create_s3_bucket
                - !Sub "arn:aws:s3:::${DeliveryBucketPrefix}"
                - !Sub "arn:aws:s3:::${CloudTrailExistsS3BucketName}"
            Sid: AWSBucketPermissionsCheck

          - Action: s3:PutObject
            Condition:
              StringEquals:
                "s3:x-amz-acl": "bucket-owner-full-control"
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
                - config.amazonaws.com
                - firehose.amazonaws.com
                - fms.amazonaws.com
                - delivery.logs.amazonaws.com
                - network-firewall.amazonaws.com
            Resource:
              !If
                - create_s3_bucket
                - !Sub "arn:aws:s3:::${DeliveryBucketPrefix}/*"
                - !Sub "arn:aws:s3:::${CloudTrailExistsS3BucketName}/*"
            Sid: AWSBucketDelivery


Outputs:
  oDeliveryS3Bucket:
    Description: Delivery S3 Bucket
    Value:
      !If
        - create_s3_bucket
        - !Ref rS3Bucket
        - !Ref CloudTrailExistsS3BucketName
  oSNSTopicArn:
    Description: Arn of SNS Topic
    Value: !Ref SumoSNSTopic
  oSumoRoleArn:
    Description: Arn of Sumo Role
    Value: !GetAtt SumoRole.Arn
